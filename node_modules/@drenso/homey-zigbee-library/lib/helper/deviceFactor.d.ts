import { ClusterSpecification, ZigBeeDevice } from 'homey-zigbeedriver';
import { ZCLNode } from 'zigbee-clusters';
export interface ZigbeeFactorDeviceProperties {
    acVoltageFactor?: number;
    acCurrentFactor?: number;
    activePowerFactor?: number;
    instantaneousDemandFactor?: number;
    meteringFactor?: number;
}
export interface ZigbeeFactorDevice extends ZigBeeDevice, ZigbeeFactorDeviceProperties {
}
export interface MeasurementReportingInterface {
    minMeasurementChange?: number;
    minMeasurementInterval?: number;
    maxMeasurementInterval?: number;
}
export declare function factorReportParserBuilder(factor: () => number, onReport?: () => void, onReportTimeout?: number, device?: ZigbeeFactorDevice): (value: number) => (number | null);
export default function initFactorImplementation(device: ZigbeeFactorDevice, zclNode: ZCLNode, capability: string, clusterSpec: ClusterSpecification, storeProperty: keyof ZigbeeFactorDeviceProperties, endPointId?: number, noPowerFactorReporting?: boolean, { minMeasurementInterval, maxMeasurementInterval, minMeasurementChange, }?: MeasurementReportingInterface, onReport?: () => void, onReportTimeout?: number, additionalMultiplier?: number): Promise<void>;
