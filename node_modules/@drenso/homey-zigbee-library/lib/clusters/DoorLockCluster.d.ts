import { AttributesDefinition, CommandDefinitions, CommandFunctions, DoorLockCluster as HomeyDoorLockCluster } from 'zigbee-clusters';
export declare const LOCK_STATE_ENUM: {
    readonly not_fully_locked: 0;
    readonly locked: 1;
    readonly unlocked: 2;
    readonly undefined: 255;
};
export type LockState = keyof typeof LOCK_STATE_ENUM;
export declare const LOCK_TYPE_ENUM: {
    readonly dead_bolt: 0;
    readonly magnetic: 1;
    readonly other: 2;
    readonly mortise: 3;
    readonly rim: 4;
    readonly latch_bolt: 5;
    readonly cylindrical_lock: 6;
    readonly tubular_lock: 7;
    readonly interconnected_lock: 8;
    readonly dead_latch: 9;
    readonly door_furniture: 10;
};
export type LockType = keyof typeof LOCK_TYPE_ENUM;
export declare const USER_STATUS_ENUM: {
    readonly available: 0;
    readonly enabled: 1;
    readonly disabled: 3;
    readonly not_supported: 255;
};
export type UserStatus = keyof typeof USER_STATUS_ENUM;
export declare const USER_TYPE_ENUM: {
    unrestricted: number;
    yearDaySchedule: number;
    weekdaySchedule: number;
    master: number;
    nonAccess: number;
};
export type UserType = keyof typeof USER_TYPE_ENUM;
export declare const SET_PIN_CODE_RESPONSE_STATUS_ENUM: {
    success: number;
    general_failure: number;
    memory_full: number;
    duplicate_code_error: number;
};
export type SetPinResponseStatus = keyof typeof SET_PIN_CODE_RESPONSE_STATUS_ENUM;
export declare const GENERAL_RESPONSE_STATUS_ENUM: {
    pass: number;
    fail: number;
};
export type GeneralResponseStatus = keyof typeof GENERAL_RESPONSE_STATUS_ENUM;
export type DoorLockClusterWithFunctions = DoorLockCluster & CommandFunctions<typeof CommandsReceived>;
export type DoorLockClusterAttributes = keyof typeof Attributes;
declare const Attributes: {
    readonly lockState: {
        readonly id: 0;
        readonly type: any;
    };
    readonly lockType: {
        readonly id: 1;
        readonly type: any;
    };
    readonly actuatorEnabled: {
        readonly id: 2;
        readonly type: any;
    };
    readonly numberOfHolidaySchedulesSupported: {
        readonly id: 22;
        readonly type: any;
    };
    readonly maxPinCodeLength: {
        readonly id: 23;
        readonly type: any;
    };
    readonly minPinCodeLength: {
        readonly id: 24;
        readonly type: any;
    };
    readonly enableLogging: {
        readonly id: 32;
        readonly type: any;
    };
    readonly language: {
        readonly id: 33;
        readonly type: any;
    };
    readonly autoRelockTime: {
        readonly id: 35;
        readonly type: any;
    };
    readonly soundVolume: {
        readonly id: 36;
        readonly type: any;
    };
};
declare const CommandsReceived: {
    readonly lockDoor: {
        readonly id: 0;
        readonly direction: "DIRECTION_CLIENT_TO_SERVER";
    };
    readonly unlockDoor: {
        readonly id: 1;
        readonly direction: "DIRECTION_CLIENT_TO_SERVER";
    };
    readonly toggle: {
        readonly id: 2;
        readonly direction: "DIRECTION_CLIENT_TO_SERVER";
    };
    readonly unlockWithTimeout: {
        readonly id: 3;
        readonly direction: "DIRECTION_CLIENT_TO_SERVER";
    };
    readonly getLogRecord: {
        readonly id: 4;
        readonly direction: "DIRECTION_CLIENT_TO_SERVER";
    };
    readonly setPinCode: {
        readonly id: 5;
        readonly direction: "DIRECTION_CLIENT_TO_SERVER";
        readonly args: {
            readonly userId: any;
            readonly userStatus: any;
            readonly userType: any;
            readonly pin: any;
        };
    };
    readonly getPinCode: {
        readonly id: 6;
        readonly direction: "DIRECTION_CLIENT_TO_SERVER";
        readonly args: {
            readonly userId: any;
        };
    };
    readonly clearPinCode: {
        readonly id: 7;
        readonly direction: "DIRECTION_CLIENT_TO_SERVER";
        readonly args: {
            readonly userId: any;
        };
    };
    readonly clearAllPinCodes: {
        readonly id: 8;
        readonly direction: "DIRECTION_CLIENT_TO_SERVER";
    };
    readonly setUserStatus: {
        readonly id: 9;
        readonly direction: "DIRECTION_CLIENT_TO_SERVER";
        readonly args: {
            readonly userId: any;
            readonly userStatus: any;
        };
    };
    readonly getUserStatus: {
        readonly id: 10;
        readonly direction: "DIRECTION_CLIENT_TO_SERVER";
        readonly args: {
            readonly userId: any;
        };
    };
    readonly setWeekdaySchedule: {
        readonly id: 11;
        readonly direction: "DIRECTION_CLIENT_TO_SERVER";
    };
    readonly getWeekdaySchedule: {
        readonly id: 12;
        readonly direction: "DIRECTION_CLIENT_TO_SERVER";
    };
    readonly clearWeekdaySchedule: {
        readonly id: 13;
        readonly direction: "DIRECTION_CLIENT_TO_SERVER";
    };
    readonly setYearDaySchedule: {
        readonly id: 14;
        readonly direction: "DIRECTION_CLIENT_TO_SERVER";
    };
    readonly getYearDaySchedule: {
        readonly id: 15;
        readonly direction: "DIRECTION_CLIENT_TO_SERVER";
    };
    readonly clearYearDaySchedule: {
        readonly id: 16;
        readonly direction: "DIRECTION_CLIENT_TO_SERVER";
    };
    readonly setUserType: {
        readonly id: 20;
        readonly direction: "DIRECTION_CLIENT_TO_SERVER";
    };
    readonly getUserType: {
        readonly id: 21;
        readonly direction: "DIRECTION_CLIENT_TO_SERVER";
    };
};
declare class DoorLockCluster extends HomeyDoorLockCluster {
    static get ATTRIBUTES(): AttributesDefinition;
    static get COMMANDS(): CommandDefinitions;
}
export default DoorLockCluster;
